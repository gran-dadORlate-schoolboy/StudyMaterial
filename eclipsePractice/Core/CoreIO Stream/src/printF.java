
public class printF {
	public static void main(String[] args) {
//			%[argument_index$][flags][width][.precision]conversion
		
		
//		 % — специальный символ, обозначающий начало инструкций форматирования.
		
//		 [argument_index$] — целое десятичное число, указывающее позицию аргумента в 
//		 списке аргументов. Ссылка на первый аргумент "1$", ссылка на второй аргумент 
//		 "2$" и т.д. Не является обязательной частью инструкции. Если позиция не задана, 
//		 то аргументы должны находиться в том же порядке, что и ссылки на них в строке форматирования.
		
//		[flags] — специальные символы для форматирования. Например, флаг "+" означает, что 
//		числовое значение должно включать знак +, флаг "-" означает выравнивание результата 
//		по левому краю, флаг «,» устанавливает разделитель тысяч у целых чисел. Не является
//		обязательной частью инструкции.
		
//		[width] — положительное целое десятичное число, которое определяет минимальное количество 
//		символов, которые будут выведены.  Не является обязательной частью инструкции.
		
//		[.precision] — не отрицательное целое десятичное число с точкойперед ним. Обычно используется 
//		для ограничения количества символов. Специфика поведения зависит от вида преобразования. Не является 
//		обязательной частью инструкции.
		
//		conversion — это символ, указывающий, как аргумент должен быть отформатирован. Например d для
//		целых чисел, s для строк, f для чисел с плавающей точкой. Является обязательной частью инструкции.
		
		
		System.err.println("Vuvod 4isel");	
		double x = 1000.00 / 3.0;
		double testNumber  = 9999.99999999;
		System.out.println("ln - " + x); //просто вывод числа
		System.out.printf("f = %8.2f", x); //восемь до точки и 2 после 
		System.out.println();
		System.out.printf("%,f", testNumber); //разделитель по тысячам
		System.out.println();
		System.out.printf("%7d", 7845); // --> "   7845"// менее 7 знаков будет «подвинуто» вправо на недостающее количество знаков.
		System.out.println();
		System.out.printf("%07d", 7845); // --> "0007845" //Число менее 7 знаков будет дополнено нулями слева на недостающее количество знаков.
		System.out.println();
		System.out.printf("%+07d", 7845); //--> "+007845"
		System.out.println();
		System.out.printf("%-7d", 7845); // --> "7845   "  //Число будет выровнено по левому краю и, если оно менее 7 знаков, то будет дополнено пробелами справа на недостающее количество знаков.
		
		System.out.println();
		System.err.println("Vuvod strok");			
		String name = "Vasia";
		int age = 35;
		System.out.printf("hello %s. U are %d old%n", name, age);
		System.out.printf(".%10s%n", "Hello"); // --> "     Hello"
		
		System.out.println("exemple ");//exemple
		System.out.printf("%-5s%-11s%-25s%-11s%n","Код","За единиц","Валюты","Рублей РФ");
		System.out.println("-----------------------------------------------------");
		System.out.printf("%-5s%-11d%-25s%-11.4f%n","AUD",1,"Австралийский доллар",44.9883);
		System.out.printf("%-5s%-11d%-25s%-11.4f%n","GBP",1,"Фунт стерлингов",86.8429);
		System.out.printf("%-5s%-11d%-25s%-11.4f%n","BYR",10000,"Белорусский рубль",39.7716);
		System.out.printf("%-5s%-11d%-25s%-11.4f%n","DKK",10,"Датская крона",84.9192);
		System.out.printf("%-5s%-11d%-25s%-11.4f%n","USD",1,"Доллар США",58.4643);
		System.out.printf("%-5s%-11d%-25s%-11.4f%n","EUR",1,"Евро",63.3695);
		System.out.printf("%-5s%-11d%-25s%-11.4f%n","KZT",100,"Казахский тенге",31.4654);

	}

}
